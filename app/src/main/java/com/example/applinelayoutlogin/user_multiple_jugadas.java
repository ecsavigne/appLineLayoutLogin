package com.example.applinelayoutlogin;import android.annotation.SuppressLint;import android.content.Intent;import android.support.v7.app.AppCompatActivity;import android.os.Bundle;import android.util.Pair;import android.view.Menu;import android.view.MenuItem;import android.view.View;import com.example.applinelayoutlogin.adapter.*;import com.example.applinelayoutlogin.libs.varGlobals;import com.example.applinelayoutlogin.libs.BD.BD;import com.example.applinelayoutlogin.libs.MyTuples.Quintet;import com.example.applinelayoutlogin.libs.MyTuples.Triplet;import com.example.applinelayoutlogin.libs.funcSistema;import android.widget.Button;import android.widget.ImageButton;import android.widget.ListView;import android.widget.TextView;import android.widget.Toast;import java.util.ArrayList;public class user_multiple_jugadas extends AppCompatActivity implements View.OnClickListener {    protected TextView tv_apueta;    protected Button btn1, btn2, btn3, btn4, btn5, btn6, btn7, btn8, btn9, btn0, btn_guardar, btnF;    protected ImageButton btn_borrar;    protected boolean es_apuesta;    protected float /*numero1, numero2, apuesta,*/montoJugadas;    boolean realApuesta;        // indica si apuesta ya es un float    protected String [] a_num, a_fijo, a_corrido;    protected ListView lv_numeros;    protected user_multiple_jugadas activity;    adapter_lv_multiple adapter;    protected BD admind;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_user_multiple_jugadas);        setTitle("Jugadas Multiples");        this.admind = new BD(this, "bolita.db", null, 1);        this.a_num = new String[15];        this.a_fijo = new String[15];        this.a_corrido = new String[15];        f_initNum_Fij_Corr();        this.montoJugadas = 0;        this.realApuesta = false;        this.es_apuesta = false;        this.activity = this;        this.adapter = new adapter_lv_multiple(this, activity, a_num, a_fijo, a_corrido);        this.lv_numeros = findViewById(R.id.id_lv_multiplejugadas);        this.lv_numeros.setAdapter(adapter);        this.tv_apueta = findViewById(R.id.id_tv_multiplejugada_candado);        globalAdapter.mult_apuesta = tv_apueta;        //****        this.btn0 = findViewById(R.id.id_btn_multipleJugada_0);        this.btn1 = findViewById(R.id.id_btn_multipleJugada_7);        this.btn2 = findViewById(R.id.id_btn_multipleJugada_8);        this.btn3 = findViewById(R.id.id_btn_multipleJugada_9);        this.btn4 = findViewById(R.id.id_btn_multipleJugada_4);        this.btn5 = findViewById(R.id.id_btn_multipleJugada_5);        this.btn6 = findViewById(R.id.id_btn_multipleJugada_6);        this.btn7 = findViewById(R.id.id_btn_multipleJugada_1);        this.btn8 = findViewById(R.id.id_btn_multipleJugada_2);        this.btn9 = findViewById(R.id.id_btn_multipleJugada_3);        this.btn_guardar = findViewById(R.id.id_btn_multipleJugada_guardar);        this.btn_borrar = findViewById(R.id.id_btn_multipleJugada_borrar);        this.btnF = findViewById(R.id.id_btn_multipleJugada_pto);        //        this.btn0.setOnClickListener(this);        this.btn1.setOnClickListener(this);        this.btn2.setOnClickListener(this);        this.btn3.setOnClickListener(this);        this.btn4.setOnClickListener(this);        this.btn5.setOnClickListener(this);        this.btn6.setOnClickListener(this);        this.btn7.setOnClickListener(this);        this.btn8.setOnClickListener(this);        this.btn9.setOnClickListener(this);        this.btn_guardar.setOnClickListener(this);        this.btn_borrar.setOnClickListener(this);        this.btnF.setOnClickListener(this);        this.tv_apueta.setOnClickListener(this);        // *****************************************************************************************    }    //codigo para el manejo de los eventos onClick de los botones de la activity    @SuppressLint({"NonConstantResourceId", "SetTextI18n"})    @Override    public void onClick(View v){        switch (v.getId()){            case R.id.id_tv_multiplejugada_candado:                if(!globalAdapter.es_apuesta) {                    globalAdapter.es_apuesta = true;                    tv_apueta.setBackgroundResource(R.drawable.edittext_selecte);                    globalAdapter.mult_apuesta = tv_apueta;                }            break;            case R.id.id_btn_multipleJugada_borrar:                String s;                if(globalAdapter.es_apuesta) {                    s = globalAdapter.mult_apuesta.getText().toString();                    s =  funcSistema.f_borra_char_str(s);                    globalAdapter.mult_apuesta.setText(s);                }                else {                    s = globalAdapter.tv_marcado.getText().toString();                    s =  funcSistema.f_borra_char_str(s);                    globalAdapter.tv_marcado.setText(s);                }            break;            case R.id.id_btn_multipleJugada_pto:// tengo que programar el estado de la apuesta OJOOOO                if(!globalAdapter.es_apuesta) {                    if (globalAdapter.columna == 2 || globalAdapter.columna == 3) {                        s = globalAdapter.tv_marcado.getText().toString();                        if (!s.contains(".")) {                            globalAdapter.tv_marcado.setText(s + ".");                            btnF.setEnabled(false);                        }                    }                }                else {                    s = globalAdapter.mult_apuesta.getText().toString();                    if (!s.contains(".")) {                        globalAdapter.mult_apuesta.setText(s + ".");                        btnF.setEnabled(false);                    }                }            break;            case R.id.id_btn_multipleJugada_0:                if(!globalAdapter.es_apuesta) {                    s = globalAdapter.tv_marcado.getText().toString();                    if (!s.contains(".")) {                        btnF.setEnabled(true);                    }                    globalAdapter.tv_marcado.setText(s + "0");                }else {                    s = globalAdapter.mult_apuesta.getText().toString();                    if (!s.contains(".")) {                        btnF.setEnabled(true);                    }                    globalAdapter.mult_apuesta.setText(s + "0");                }            break;            case R.id.id_btn_multipleJugada_1:                globalAdapter.tv_marcado.requestFocus();                if(!globalAdapter.es_apuesta) {                    s = globalAdapter.tv_marcado.getText().toString();                    if (!s.contains(".")) {                        btnF.setEnabled(true);                    }                    globalAdapter.tv_marcado.setText(s + "1");                }else {                    s = globalAdapter.mult_apuesta.getText().toString();                    if (!s.contains(".")) {                        btnF.setEnabled(true);                    }                    globalAdapter.mult_apuesta.setText(s + "1");                }            break;            case R.id.id_btn_multipleJugada_2:                if(!globalAdapter.es_apuesta) {                    s = globalAdapter.tv_marcado.getText().toString();                    if (!s.contains(".")) {                        btnF.setEnabled(true);                    }                    globalAdapter.tv_marcado.setText(s + "2");                }else {                    s = globalAdapter.mult_apuesta.getText().toString();                    if (!s.contains(".")) {                        btnF.setEnabled(true);                    }                    globalAdapter.mult_apuesta.setText(s + "2");                }            break;            case R.id.id_btn_multipleJugada_3:                if(!globalAdapter.es_apuesta) {                    s = globalAdapter.tv_marcado.getText().toString();                    if (!s.contains(".")) {                        btnF.setEnabled(true);                    }                    globalAdapter.tv_marcado.setText(s + "3");                }else{                    s = globalAdapter.mult_apuesta.getText().toString();                    if (!s.contains(".")) {                        btnF.setEnabled(true);                    }                    globalAdapter.mult_apuesta.setText(s + "3");                }            break;            case R.id.id_btn_multipleJugada_4:                if(!globalAdapter.es_apuesta) {                    s = globalAdapter.tv_marcado.getText().toString();                    if (!s.contains(".")) {                        btnF.setEnabled(true);                    }                    globalAdapter.tv_marcado.setText(s + "4");                }else {                    s = globalAdapter.mult_apuesta.getText().toString();                    if (!s.contains(".")) {                        btnF.setEnabled(true);                    }                    globalAdapter.mult_apuesta.setText(s + "4");                }            break;            case R.id.id_btn_multipleJugada_5:                if(!globalAdapter.es_apuesta) {                    s = globalAdapter.tv_marcado.getText().toString();                    if (!s.contains(".")) {                        btnF.setEnabled(true);                    }                    globalAdapter.tv_marcado.setText(s + "5");                }else {                    s = globalAdapter.mult_apuesta.getText().toString();                    if (!s.contains(".")) {                        btnF.setEnabled(true);                    }                    globalAdapter.mult_apuesta.setText(s + "5");                }            break;            case R.id.id_btn_multipleJugada_6:                if(!globalAdapter.es_apuesta) {                    s = globalAdapter.tv_marcado.getText().toString();                    if (!s.contains(".")) {                        btnF.setEnabled(true);                    }                    globalAdapter.tv_marcado.setText(s + "6");                }else {                    s = globalAdapter.mult_apuesta.getText().toString();                    if (!s.contains(".")) {                        btnF.setEnabled(true);                    }                    globalAdapter.mult_apuesta.setText(s + "6");                }            break;            case R.id.id_btn_multipleJugada_7:                if(!globalAdapter.es_apuesta) {                    s = globalAdapter.tv_marcado.getText().toString();                    if (!s.contains(".")) {                        btnF.setEnabled(true);                    }                    globalAdapter.tv_marcado.setText(s + "7");                }else {                    s = globalAdapter.mult_apuesta.getText().toString();                    if (!s.contains(".")) {                        btnF.setEnabled(true);                    }                    globalAdapter.mult_apuesta.setText(s + "7");                }            break;            case R.id.id_btn_multipleJugada_8:                if(!globalAdapter.es_apuesta) {                    s = globalAdapter.tv_marcado.getText().toString();                    if (!s.contains(".")) {                        btnF.setEnabled(true);                    }                    globalAdapter.tv_marcado.setText(s + "8");                }else {                    s = globalAdapter.mult_apuesta.getText().toString();                    if (!s.contains(".")) {                        btnF.setEnabled(true);                    }                    globalAdapter.mult_apuesta.setText(s + "8");                }            break;            case R.id.id_btn_multipleJugada_9:                if(!globalAdapter.es_apuesta) {                    s = globalAdapter.tv_marcado.getText().toString();                    if (!s.contains(".")) {                        btnF.setEnabled(true);                    }                    globalAdapter.tv_marcado.setText(s + "9");                }else {                    s = globalAdapter.mult_apuesta.getText().toString();                    if (!s.contains(".")) {                        btnF.setEnabled(true);                    }                    globalAdapter.mult_apuesta.setText(s + "9");                }            break;            case R.id.id_btn_multipleJugada_guardar:                int idConjuntoJugada = -1, idUsr = varGlobals.idUsr;                if(!tv_apueta.getText().toString().isEmpty()) {                    //Obtener Conjunto de parlets e insertarlos y guardar el idConjunto jugada Multiple                    //crear parlets                    ArrayList<Pair<Integer, Integer>> parlets;                    float priceParlet = (tv_apueta.getText().toString().isEmpty()) ? (float)0 : Float.parseFloat(tv_apueta.getText().toString());                    if(priceParlet == 0 ) {// Registrar jugadas                        ArrayList<Quintet<Integer, Integer, Float, Float, Float>> arrayJugadas;                        arrayJugadas = funcSistema.f_obtener_grupo_jugada(a_num, a_fijo, a_corrido);                        idConjuntoJugada = funcSistema.f_registrar_jugada(admind, idUsr, arrayJugadas, idConjuntoJugada);                        if (idConjuntoJugada == -2) {                            Toast.makeText(activity, "Error insertando jugadas. Tenga en cuenta que el usuario debe tener limites asociados", Toast.LENGTH_LONG).show();                        } else {                            Toast.makeText(activity, "Conjunto de jugada registradas correctamente", Toast.LENGTH_SHORT).show();                        }                    } else {                        parlets = funcSistema.f_obtener_parlets(a_num);                        if (parlets == null) {// Registrar jugadas                            ArrayList<Quintet<Integer, Integer, Float, Float, Float>> arrayJugadas;                            arrayJugadas = funcSistema.f_obtener_grupo_jugada(a_num, a_fijo, a_corrido);                            idConjuntoJugada = funcSistema.f_registrar_jugada(admind, idUsr, arrayJugadas, idConjuntoJugada);                            if (idConjuntoJugada == -2) {                                Toast.makeText(activity, "Error insertando jugadas. Tenga en cuenta que el usuario debe tener limites asociados", Toast.LENGTH_SHORT).show();                            } else {                                Toast.makeText(activity, "Conjunto de jugada registradas correctamente", Toast.LENGTH_SHORT).show();                            }                        }                        else {                            priceParlet = priceParlet/parlets.size();                            ArrayList<Triplet<Integer, Integer, Float>>  parletsValor = new ArrayList<>();                            //Asigna a cada parlets su valor                            int size = parlets.size();                            for( int i = 0; i < size; i++) {                                Triplet<Integer, Integer, Float> temp = new Triplet<>(parlets.get(i).first, parlets.get(i).second, priceParlet);                                parletsValor.add(temp);                            }                            idConjuntoJugada = funcSistema.f_registrar_parlets(admind, idUsr, parletsValor);                            if(idConjuntoJugada == -3){                                Toast.makeText(this, varGlobals.nameUsr+ " Usted no tiene limite para agregar jugada consurte con su banco", Toast.LENGTH_LONG).show();                                return;                            }                            if(idConjuntoJugada == -2) {                                Toast.makeText(this, "Ocurrio un error registrando parlets. Tenga en cuenta que el usuario debe tener limites asociados", Toast.LENGTH_SHORT).show();                                return;                            }else {//insertar jugada                                ArrayList<Quintet<Integer, Integer, Float, Float, Float>> arrayJugadas;                                arrayJugadas = funcSistema.f_obtener_grupo_jugada(a_num, a_fijo, a_corrido);                                idConjuntoJugada = funcSistema.f_registrar_jugada(admind, idUsr, arrayJugadas, idConjuntoJugada);                                if (idConjuntoJugada == -2) {                                    Toast.makeText(activity, "Error insertando jugadas. Tenga en cuenta que el usuario debe tener limites asociados", Toast.LENGTH_SHORT).show();                                } else {                                    Toast.makeText(activity, "Conjunto de jugada registradas correctamente", Toast.LENGTH_SHORT).show();                                }                            }                        }                    }                }else {                    //obtener conjunto de jugada e insertar en el sistema                    ArrayList<Quintet<Integer, Integer, Float, Float, Float>> arrayJugadas;                    arrayJugadas = funcSistema.f_obtener_grupo_jugada(a_num, a_fijo, a_corrido);                    idConjuntoJugada = funcSistema.f_registrar_jugada(admind, idUsr, arrayJugadas, idConjuntoJugada);                    if (idConjuntoJugada == -2) {                        Toast.makeText(activity, "Error insertando jugadas. Tenga en cuenta que el usuario debe tener limites asociados", Toast.LENGTH_SHORT).show();                    } else {                        Toast.makeText(activity, "Conjunto de jugada registradas correctamente", Toast.LENGTH_SHORT).show();                    }                }                f_initNum_Fij_Corr();                tv_apueta.setText("");            break;        }        //Registrar los valores de las columnas del ListView        switch (globalAdapter.columna) {            case 1:                a_num[globalAdapter.index_marca] = globalAdapter.tv_marcado.getText().toString();                break;            case 2:                a_fijo[globalAdapter.index_marca] = globalAdapter.tv_marcado.getText().toString();                break;            case 3:                a_corrido[globalAdapter.index_marca] = globalAdapter.tv_marcado.getText().toString();                break;        }        adapter.notifyDataSetChanged();    }    private void f_initNum_Fij_Corr() {        for (int i = 0; i < 15; i++) {            a_num[i] = a_corrido[i] = a_fijo[i] = "";        }    }    //      Método para mostrar y ocultar Menu    @Override    public boolean onCreateOptionsMenu(Menu m) {        getMenuInflater().inflate(R.menu.menuapp, m);        return true;    }    @Override    public boolean onPrepareOptionsMenu(Menu m) {        MenuItem admin, multiple;        admin = m.findItem(0);        multiple = m.findItem(R.id.idItem_Listero_Multiple);        multiple.setVisible(false);        if( varGlobals.nameGrupoUsr.compareTo("listero") == 0) {            admin.setVisible(false);        }        return true;    }    //    Método para asignar las funciones correspondientes a las opciones    @SuppressLint({"NonConstantResourceId", "SetTextI18n"})    public boolean onOptionsItemSelected(MenuItem i) {        Intent linker;        switch (i.getItemId()) {            case R.id.idItem_Admin_Horarios:                linker = new Intent(activity, definirHorarios.class);                startActivity( linker );                break;            case R.id.idItem_Admin_Menu_Crear:                linker = new Intent(activity, crearMenu.class);                startActivity( linker );                break;            case R.id.idItem_Admin_Menu_Modificar:                Toast.makeText(activity, "Click Modificar Menu", Toast.LENGTH_SHORT).show();                break;            case R.id.idItem_Admin_Menu_Eliminar:                Toast.makeText(activity, "Click Eliminar Menu", Toast.LENGTH_SHORT).show();                break;            case R.id.idItem_Admin_SubMenu_Crear:                Intent vSgte_crearSubMenu = new Intent(activity, agregarSubMenu.class);                startActivity( vSgte_crearSubMenu );                break;            case R.id.idItem_Admin_SubMenu_Modificar:                Toast.makeText( activity, "Modifica SubMenu", Toast.LENGTH_SHORT).show();                break;            case R.id.idItem_Admin_SubMenu_Eliminar:                Toast.makeText(activity, "Elimina SubMenu", Toast.LENGTH_SHORT).show();                break;            case R.id.idItem_Admin_Permiso_Crear:                linker = new Intent(activity, crearPermisos.class);                startActivity( linker );                break;            case R.id.idItem_Admin_Permiso_Modificar:                Toast.makeText(activity, "Modificar Permiso3", Toast.LENGTH_SHORT).show();                break;            case R.id.idItem_Admin_Permiso_Eliminar:                Toast.makeText( activity, "Eliminar Permiso", Toast.LENGTH_SHORT).show();                break;            case R.id.idItem_Admin_Grupo_Crear:                linker = new Intent(activity, crearGrupo.class);                startActivity( linker );                break;            case R.id.idItem_Admin_Grupo_Asociar:                linker = new Intent(activity, asociarPermisoGrupo.class);                startActivity( linker );                Toast.makeText(activity, "Asocoiar Permisos a grupo", Toast.LENGTH_SHORT).show();                break;            case R.id.idItem_Admin_Grupo_Modificar:                Toast.makeText(activity, "Modificar Grupo", Toast.LENGTH_SHORT).show();                break;            case R.id.idItem_Admin_Grupo_Eliminar:                Toast.makeText(activity, "Eliminar", Toast.LENGTH_SHORT).show();                break;            case R.id.idItem_Admin_Mostrar_TarifaPago:                Toast.makeText( activity, "Mostrar Tarifa PAgo", Toast.LENGTH_SHORT).show();                break;            case R.id.idItem_Admin_Mostrar_Tiro:                linker = new Intent(activity, mostrarTiro.class);                startActivity( linker );                break;            case R.id.idItem_Admin_Mostrar_ListaListero:                linker = new Intent(activity, mostararDatos.class);                varGlobals.src = "mostararDatos";                startActivity( linker );                break;            case R.id.idItem_Listero_MisList:                linker = new Intent(activity, mostararDatos.class);                varGlobals.src = "mostararList";                startActivity( linker );                break;            case R.id.idItem_Listero_MisBotes:                linker = new Intent(activity, mostararDatos.class);                varGlobals.src = "mostararBotes";                startActivity( linker );                break;            case R.id.idItem_Admin_Registrar_TarifaPago:                linker = new Intent(activity, agregarTarifaPago.class);                startActivity( linker );                break;            case R.id.idItem_Admin_Registrar_Tiro:                Intent vSgte_crearRegistroTiro = new Intent(activity, registrartiro.class);                startActivity( vSgte_crearRegistroTiro );                break;            case R.id.idItem_Admin_Usuario_Bloquear:                linker = new Intent(activity, bloquearDesbloquerUsuario.class);                varGlobals.src = "bloquear";                startActivity( linker );                break;            case R.id.idItem_Admin_Usuario_Desbloquear:                linker = new Intent(activity, bloquearDesbloquerUsuario.class);                varGlobals.src = "desbloquear";                startActivity( linker );                break;            case R.id.idItem_Admin_Usuario_Modificar:                Toast.makeText(activity, "Modificar Usuario", Toast.LENGTH_SHORT).show();                break;            case R.id.idItem_Admin_Usuario_Registrar:                linker = new Intent(activity, crearUsuario.class);                startActivity( linker );                break;            case R.id.idItem_Admin_Usuario_Eliminar:                Toast.makeText(activity, "Eliminar Usuario", Toast.LENGTH_SHORT).show();                break;            case R.id.idItem_Listero_ShowClose:                linker = new Intent(activity, verResumen.class);                startActivity( linker );                break;            case R.id.idItem_Listero_GralTiro:                linker = new Intent(activity, registrartiro.class);                startActivity( linker );                break;            case R.id.idItem_Listero_Simple:                linker = new Intent(activity, user_jugada_simple_Activity.class);                startActivity( linker );                break;            case R.id.idItem_Listero_Parlet:                linker = new Intent(activity, user_parlet_activity.class);                startActivity( linker );                break;            case R.id.idItem_Listero_Candado:                linker = new Intent(activity, user_candado_parlet.class);                startActivity( linker );                break;            case R.id.idItem_Listero_Multiple:                linker = new Intent(activity, user_multiple_jugadas.class);                startActivity( linker );                break;            case R.id.idItem_Listero_Centena:                linker = new Intent(activity, insertarCentena.class);                startActivity( linker );                break;            case R.id.idItem_Listero_Decena:                linker = new Intent(activity, insertarDecenas.class);                startActivity( linker );                break;            case R.id.idItem_Listero_Terminal:                linker = new Intent(activity, insertarTerminal.class);                startActivity( linker );                break;        }        return super.onOptionsItemSelected(i);    }}